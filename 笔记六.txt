swing编程

Swing：
	Swing 是 Java 平台的 UI ―― 它充当处理用户和计算机之间全部交互的软件。它实际上充
当用户和计算机内部之间的中间人

组件：
	组件构成图形界面零部件面板按钮下拉选等等,具有图形界面，并能完成一定功能的封装体
容器：
用于包含其它组件的组件

Swing组件:
	Swing 组件主要为文本处理、按钮、标签、列表、pane、组合框、滚动条、滚动 pane、菜单、表格和树提供了组件

JButton 能显示文本和图形的按钮，它是AWT按钮组件的替代组件
JFrame 扩展java.awt.Frame的外部窗体
JCheckBox 能显示文本和图形的复选框，它是AWT选择组件的替代组件
JLabel 可显示文本和图标的标签，它是AWT标签组件的替代组件
JList 显示选项列表的组件，它是AWT列表组件的替代组件
JLabel 可显示文本和图标的标签，它是AWT标签组件的替代组件
JMenuItem 菜单项，它是AWT菜单项组件的替代组件
JTable 表格
JTextPane 简单的文本编辑器

Swing 库中最基础的组件是 JLabel

常用方法：
	get/setText(): 获取/设置标签的文本。 
	get/seticon(): 获取/设置标签的图片。 
	get/setHorizontalAlignment(): 获取/设置文本的水平位置。 
	get/setVerticalAlignment(): 获取/设置文本的垂直位置。 
	get/setDisplayedMnemonic(): 获取/设置标签的访问键（下划线文字）。 
	get/setLableFor(): 获取/设置这个标签附着的组件，所以当用户按下 Alt+访问键时，焦点转	移到指定的组件。

Swing 中的基本动作组件 JButton，是与每个窗口中都能看到的 确定（OK） 和 退出（Cancel） 一样的按钮
	常用方法同上

Swing 中的基本文本组件是 JTextField，它允许用户在 UI 中输入文本


JFrame 类就是做这个的――它是一个容器，允许你把其他组件添加到它里面，把它们组织起来，并把它们呈现给用户

常用方法：
	get/setTitle(): 获取/设置帧的标题。 
	get/setState(): 获取/设置帧的最小化、最大化等状态。 
	is/setVisible(): 获取/设置帧的可视状态，换句话说，是否在屏幕上显示。 
	get/setLocation(): 获取/设置帧在屏幕上应当出现的位置。 
	get/setsize(): 获取/设置帧的大小。 
	add(): 将组件添加到帧中。

事件：
	用户用于交互而产生的键盘或鼠标动作.响应用户的动作称为处理事件
	
机制：


1.事件源先注册好监听器
2.事件源产生事件
3.事件源广播事件给任意一个在它上面注册的监听器
4.监听器接受事件并执行相应的事件处理方法

事件源：
事件源是一个能够注册监听器对象并发送事件对象的对象。例如按钮或者滚动条就是事件源

事件，事件类型和事件对象：

	事件一般是用户在界面上的一个操作，当一个事件发生时，该事件用一个事件	对象来表示，事件对象有对应的事件类

	在Java中，所有的事件对象都最终派生于java.util.EventObject类

事件监听器：
监听器对象是一个实现了特定监听器接口（listener interface）的类的实例
	事件监听器适配器类是对事件监听器接口的简单实现。目的是为了减少编程的工作量。
　　　　处理事件的方法被称为事件处理器，即事件监听器接口定义，并在事件监听器类中实现的方法

注册事件监听器：
为了能够让事件监听器检查某个组件（事件源）是否发生了某些事件，并且在发生时激活事件处理器进行相应的处理，必须在事件源上注册事件监听器

这是通过使用事件源组件的以下方法来完成的：
　　　　addXxxListener（事件监听器对象）
　　　　Xxx对应相应的事件类