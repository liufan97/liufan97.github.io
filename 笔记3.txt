线程
创建线程的两种方式的差异

  1.extends Thread
	不能再继承其他类了(Java单继承) 
	同份资源不共享 
  2.implements Runnable
	多个线程共享一个目标资源，适合多线程 处理同一份资源
	该类还可以继承其他类，也可以实现其他 接口。


线程的生命周期

   新建   就绪   运行  阻塞  死亡
	注意:阻塞状态不能直接转成运行状态,阻塞状态只能重新进入就绪状	     态
	
后台线程
后台线程：处于后代运行,任务是为其他线程提供服务.也称为“守护线程”或“精灵线程”。JVM的垃圾回收就是典型的后台线程。特点：若所有的前台线程都死亡，后台线程自动死亡。
	Daemon d = new Daemon();
	d.setDaemon(true);//把d线程设置成后台线程

线程休眠：让执行的线程暂停一段时间，进入阻塞状态
	.sleep(int i);

线程优先级：每个线程都有优先级，优先级的高低只和线程获得执行机会的次数多少有关并非线程优先级越高的就一定先执行哪个线程的先运行取决于CPU的调度;默认情况下main线程具有普通的优先级而它创建的线程也具有普通优先级。

线程的安全性问题

导致安全问题的出现的原因：
	多个线程访问出现延迟。 
	线程随机性。 

线程同步
	当多个线程访问同一份数据的时候，很容易出现线程安全的问题

   方法：
	synchronized(obj){
		//obj表示一个对象 花括号内代码执行完释放这个对象
	}