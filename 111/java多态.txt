多态是同一个行为具有多个不同表现形式或形态的能力。

多态的优点 ：
1. 消除类型之间的耦合关系
2. 可替换性
3. 可扩充性
4. 接口性
5. 灵活性
6. 简化性

多态存在的三个必要条件：
继承		重写		父类引用指向子类对象

多态的好处：可以使程序有良好的扩展，并可以对所有类的对象进行通用处理。


多态的实现方式
方式一：重写
方式二：接口


对于多态，可以总结以下几点： 
一、使用父类类型的引用指向子类的对象； 
二、该引用只能调用父类中定义的方法和变量； 
三、如果子类中重写了父类中的一个方法，那么在调用这个方法的时候，将会调用子类中的这个方法；（动态连接、动态调用）; 
四、变量不能被重写（覆盖），"重写"的概念只针对方法，如果在子类中"重写"了父类中的变量，那么在编译时会报错。 



